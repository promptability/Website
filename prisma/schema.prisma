// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                String    @id @default(cuid())
  email             String    @unique
  firstName         String?
  lastName          String?
  stripeCustomerId  String?   @unique
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  
  subscriptions     Subscription[]
  payments          Payment[]
  
  @@index([email])
  @@index([stripeCustomerId])
}

model Subscription {
  id                String    @id @default(cuid())
  userId            String
  stripeSubscriptionId String @unique
  stripePriceId     String
  status            String    // active, canceled, past_due, etc.
  planType          String    // starter, pro, team
  billingCycle      String    // monthly, yearly
  quantity          Int       @default(1)
  currentPeriodStart DateTime
  currentPeriodEnd  DateTime
  cancelAtPeriodEnd Boolean   @default(false)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  
  user              User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([userId])
  @@index([stripeSubscriptionId])
  @@index([status])
}

model Payment {
  id                String    @id @default(cuid())
  userId            String
  stripePaymentIntentId String @unique
  amount            Int       // in cents
  currency          String    @default("usd")
  status            String    // succeeded, failed, processing
  description       String?
  createdAt         DateTime  @default(now())
  
  user              User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([userId])
  @@index([stripePaymentIntentId])
}

model WebhookEvent {
  id                String    @id @default(cuid())
  stripeEventId     String    @unique
  type              String
  processed         Boolean   @default(false)
  error             String?
  createdAt         DateTime  @default(now())
  
  @@index([stripeEventId])
  @@index([processed])
}